@model SailorDomain.Entities.Experience

@{
    ViewBag.Title = "新增工作经历";
}

<!-- BEGIN PAGE CONTENT -->
<div class="page-content">
    <div class="container">
        <!-- BEGIN PAGE BREADCRUMB -->
        <ul class="page-breadcrumb breadcrumb">
            <li>
                @Html.ActionLink("首页", "Index", "Home")
                <i class="fa fa-circle"></i>
            </li>
            <li>
                @Html.ActionLink("工作经历管理", "Index")
                <i class="fa fa-circle"></i>
            </li>
            <li class="active">
                @ViewBag.Title
            </li>
        </ul>
        <!-- END PAGE BREADCRUMB -->

        <div class="row">
            <div class="col-md-12">
                <div class="portlet light">
                    <div class="portlet-title">
                        <div class="caption">
                            <i class="fa fa-plus-square-o font-green-sharp"></i>
                            <span class="caption-subject font-green-sharp bold uppercase">@ViewBag.Title</span>
                        </div>
                    </div>
                    <div class="portlet-body form">
                        <!-- BEGIN FORM-->
                        @using (Html.BeginForm("Create", "Experience", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                        {
                            <div class="form-body">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true)
                                @Html.Hidden("medium")
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-3" for="Post">
                                                @Html.DisplayNameFor(model => model.Post)
                                                <span class="required" aria-required="true">*</span>
                                            </label>
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.Post, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Post)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-3" for="SailorID">
                                                @Html.DisplayNameFor(model => model.SailorID)
                                                <span class="required" aria-required="true">*</span>
                                            </label>
                                            <div class="col-md-9">
                                                @Html.DropDownList("SailorID", null, String.Empty, new { @class = "form-control select2me" })
                                                @Html.ValidationMessageFor(model => model.SailorID)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                </div>
                                <!--/row-->
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.VesselName, new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.VesselName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.VesselName)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IMO, new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.IMO, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.IMO)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                </div>
                                <!--/row-->
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-md-3" for="BeginTime">
                                                起始日期
                                                <span class="required" aria-required="true">*</span>
                                            </label>
                                            <div class="col-md-9">
                                                <div class="input-group  date-picker input-daterange">
                                                    @Html.TextBoxFor(model => model.BeginTime, "{0:yyyy-MM-dd}", new { @class = "form-control" })
                                                    <span class="input-group-addon">
                                                        --
                                                    </span>
                                                    @Html.TextBoxFor(model => model.EndTime, "{0:yyyy-MM-dd}", new { @class = "form-control" })
                                                </div>
                                                @Html.ValidationMessageFor(model => model.BeginTime)
                                                @Html.ValidationMessageFor(model => model.EndTime)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.DurationMonth, new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                <div class="input-group">
                                                    @Html.EditorFor(model => model.DurationMonth, new { htmlAttributes = new { @class = "form-control" } })
                                                    <span class="input-group-addon">
                                                        M
                                                    </span>
                                                </div>
                                                @Html.ValidationMessageFor(model => model.DurationMonth)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                </div>
                                <!--/row-->
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.CompanyName, new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.CompanyName)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.VesselType, new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.VesselType, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.VesselType)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                </div>
                                <!--/row-->
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Flag, new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.Flag, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Flag)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.DeadWeightTon, new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.DeadWeightTon, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.DeadWeightTon)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                </div>
                                <!--/row-->
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.MainEngine, new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.MainEngine, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.MainEngine)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Power, new { @class = "control-label col-md-3" })
                                            <div class="col-md-9">
                                                @Html.EditorFor(model => model.Power, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Power)
                                            </div>
                                        </div>
                                    </div>
                                    <!--/span-->
                                </div>
                                <!--/row-->

                            </div>
                            <div class="form-actions">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="row">
                                            <div class="col-md-offset-3 col-md-9">
                                                <button type="submit" class="btn green"><i class="fa fa-save"></i> 保存</button>
                                                <a href="@Url.Action("Index")" class="btn default"><i class="fa fa-undo"></i> 返回列表</a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                    </div>
                                </div>
                            </div>
                        }
                        <!-- END FORM-->
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<!-- END PAGE CONTENT -->

@section scripts{
    <script>
        $(function () {
            var SailorID = '@Request.QueryString["SailorID"]';
            if (SailorID) {
                $('#SailorID').select2("readonly", true);
                var sailorUrl = '@Url.Action("GetSailor", "Sailor")';
                var data = { "id": SailorID };
                $.getJSON(sailorUrl, data, function (sailor) {
                    $('#Post').select2("val", sailor.Post);
                });
            }

            var sailorUrl = '@Url.Action("GetSailor", "Sailor")';
            $('#SailorID').on('change', function (e) {
                var data = { "id": e.val };
                $.getJSON(sailorUrl, data, function (sailor) {
                    $('#Post').select2("val", sailor.Post);
                });
            });

            $('#BeginTime').parent().datepicker({
                rtl: Metronic.isRTL(),
                format: "yyyy-mm-dd",
                language: "zh-CN",
                todayHighlight: true,
                autoclose: true
            }).on("changeDate", function () {
                var beginTimeString = $('#BeginTime').val();
                var endTimeString = $('#EndTime').val();
                if (!beginTimeString || !endTimeString)
                    return;
                var months = getMonthBetween(beginTimeString, endTimeString);
                $('#DurationMonth').val(months);
            });

        })

        function getMonthBetween(startDate, endDate) {
            startDate = new Date(startDate.replace(/-/g, '/'));
            endDate = new Date(endDate.replace(/-/g, '/'));
            var num = 0;
            var year = endDate.getFullYear() - startDate.getFullYear();
            num += year * 12;
            var month = endDate.getMonth() - startDate.getMonth();
            num += month;
            var day = endDate.getDate() - startDate.getDate();
            if (day > 15) {
                num += 1;
            } else if (day < -15) {
                num -= 1;
            }
            return num;
        }
    </script>
}
