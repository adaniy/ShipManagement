// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ship.Infrastructure.Data;

namespace Ship.Web.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20180728112438_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ship.Core.Entities.Certificate", b =>
                {
                    b.Property<int>("CertificateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CertificateTypeID");

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<byte?>("Degree");

                    b.Property<byte?>("Department");

                    b.Property<DateTime?>("ExpiryDate");

                    b.Property<int?>("FileID");

                    b.Property<DateTime?>("IssueDate");

                    b.Property<string>("IssuePlace")
                        .HasMaxLength(50);

                    b.Property<string>("MaritimeBureau")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Nationality")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("NoticeDate");

                    b.Property<int>("SailorID");

                    b.Property<string>("SailorName")
                        .HasMaxLength(10);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<byte?>("VesselDegree");

                    b.HasKey("CertificateID");

                    b.HasIndex("SailorID");

                    b.ToTable("Certificate");
                });

            modelBuilder.Entity("Ship.Core.Entities.CertificateType", b =>
                {
                    b.Property<int>("CertificateTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("CertificateCategory");

                    b.Property<string>("Description")
                        .HasMaxLength(100);

                    b.Property<bool>("IsPublic");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.HasKey("CertificateTypeID");

                    b.ToTable("CertificateType");
                });

            modelBuilder.Entity("Ship.Core.Entities.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(200);

                    b.Property<string>("Bank")
                        .HasMaxLength(100);

                    b.Property<string>("BankAccount")
                        .HasMaxLength(100);

                    b.Property<string>("Code")
                        .HasMaxLength(20);

                    b.Property<string>("ContactTel")
                        .HasMaxLength(20);

                    b.Property<string>("Contacter")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .HasMaxLength(20);

                    b.Property<string>("Fax")
                        .HasMaxLength(20);

                    b.Property<byte?>("HonorLevel");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10);

                    b.Property<byte?>("Property");

                    b.Property<string>("Remark")
                        .HasMaxLength(200);

                    b.Property<string>("Representative")
                        .HasMaxLength(10);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<string>("TaxNo")
                        .HasMaxLength(50);

                    b.Property<string>("Telephone")
                        .HasMaxLength(20);

                    b.Property<byte?>("Type");

                    b.Property<string>("Website")
                        .HasMaxLength(200);

                    b.HasKey("CompanyID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Ship.Core.Entities.Contract", b =>
                {
                    b.Property<int>("ContractID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AboardDate");

                    b.Property<double?>("AgencyFee");

                    b.Property<DateTime?>("AshoreDate");

                    b.Property<bool>("Complete");

                    b.Property<string>("ContractNo")
                        .HasMaxLength(50);

                    b.Property<double?>("HomeWage");

                    b.Property<double?>("ManagementFee");

                    b.Property<DateTime?>("NoticeDate");

                    b.Property<byte>("Post");

                    b.Property<string>("Remark")
                        .HasMaxLength(100);

                    b.Property<int>("SailorID");

                    b.Property<string>("SailorName")
                        .HasMaxLength(10);

                    b.Property<double?>("ShipWage");

                    b.Property<int>("ShipownerID");

                    b.Property<string>("ShipownerName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("SigningDate");

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("Term");

                    b.Property<double?>("ThirdPartyFee");

                    b.Property<double?>("VacationWage");

                    b.Property<int>("VesselID");

                    b.Property<string>("VesselName")
                        .HasMaxLength(50);

                    b.Property<double?>("Wage");

                    b.Property<int>("WageInterval");

                    b.HasKey("ContractID");

                    b.HasIndex("SailorID");

                    b.HasIndex("ShipownerID");

                    b.HasIndex("VesselID");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("Ship.Core.Entities.Exam", b =>
                {
                    b.Property<int>("ExamID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("ApplyPost");

                    b.Property<string>("CertificateNo")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ExamDate");

                    b.Property<string>("ExamNo")
                        .HasMaxLength(50);

                    b.Property<double?>("Expense");

                    b.Property<double?>("ExpenseClaim");

                    b.Property<DateTime?>("IssueDate");

                    b.Property<bool>("Qualified");

                    b.Property<string>("Remark")
                        .HasMaxLength(100);

                    b.Property<int>("SailorID");

                    b.Property<string>("SailorName")
                        .HasMaxLength(10);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.HasKey("ExamID");

                    b.HasIndex("SailorID");

                    b.ToTable("Exam");
                });

            modelBuilder.Entity("Ship.Core.Entities.ExamItem", b =>
                {
                    b.Property<int>("ExamItemID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ExamDate");

                    b.Property<int>("ExamID");

                    b.Property<string>("ItemName")
                        .HasMaxLength(50);

                    b.Property<bool>("Qualified");

                    b.Property<int>("Score");

                    b.HasKey("ExamItemID");

                    b.HasIndex("ExamID");

                    b.ToTable("ExamItem");
                });

            modelBuilder.Entity("Ship.Core.Entities.Experience", b =>
                {
                    b.Property<int>("ExperienceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BeginTime");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50);

                    b.Property<int?>("DeadWeightTon");

                    b.Property<int?>("DurationMonth");

                    b.Property<DateTime?>("EndTime");

                    b.Property<string>("Flag")
                        .HasMaxLength(50);

                    b.Property<string>("IMO")
                        .HasMaxLength(20);

                    b.Property<string>("MainEngine")
                        .HasMaxLength(200);

                    b.Property<byte?>("Post");

                    b.Property<string>("Power")
                        .HasMaxLength(10);

                    b.Property<int>("SailorID");

                    b.Property<string>("SailorName")
                        .HasMaxLength(10);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<string>("VesselName")
                        .HasMaxLength(50);

                    b.Property<byte?>("VesselType");

                    b.HasKey("ExperienceID");

                    b.HasIndex("SailorID");

                    b.ToTable("Experience");
                });

            modelBuilder.Entity("Ship.Core.Entities.Family", b =>
                {
                    b.Property<int>("FamilyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(50);

                    b.Property<bool>("Beneficiary");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Relationship")
                        .HasMaxLength(10);

                    b.Property<string>("Remark")
                        .HasMaxLength(50);

                    b.Property<int>("SailorID");

                    b.Property<string>("SailorName")
                        .HasMaxLength(10);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<string>("Telephone")
                        .HasMaxLength(20);

                    b.HasKey("FamilyID");

                    b.HasIndex("SailorID");

                    b.ToTable("Family");
                });

            modelBuilder.Entity("Ship.Core.Entities.Interview", b =>
                {
                    b.Property<int>("InterviewID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ComprehensiveAssessment")
                        .HasMaxLength(10);

                    b.Property<string>("ComprehensiveScore")
                        .HasMaxLength(10);

                    b.Property<byte>("Conclusion");

                    b.Property<byte?>("EmergencyHandle");

                    b.Property<byte?>("EnglishLevel");

                    b.Property<byte?>("Expertise");

                    b.Property<byte?>("Health");

                    b.Property<DateTime?>("InterviewDate");

                    b.Property<string>("InterviewPlace")
                        .HasMaxLength(10);

                    b.Property<string>("InterviewScore")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Interviewer")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<byte?>("Listening");

                    b.Property<byte?>("Management");

                    b.Property<string>("Other")
                        .HasMaxLength(100);

                    b.Property<byte>("Post");

                    b.Property<string>("ProfessionalScore")
                        .HasMaxLength(10);

                    b.Property<byte?>("Qualification");

                    b.Property<byte?>("Reading");

                    b.Property<int>("SailorID");

                    b.Property<string>("SailorName")
                        .HasMaxLength(10);

                    b.Property<string>("SailorRequirement")
                        .HasMaxLength(100);

                    b.Property<byte?>("ServiceAwareness");

                    b.Property<byte?>("SmsOperation");

                    b.Property<byte?>("Speaking");

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<byte?>("Writing");

                    b.HasKey("InterviewID");

                    b.HasIndex("SailorID");

                    b.ToTable("Interview");
                });

            modelBuilder.Entity("Ship.Core.Entities.LaborSupply", b =>
                {
                    b.Property<int>("LaborSupplyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Baseline");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Remark")
                        .HasMaxLength(100);

                    b.Property<string>("Specification")
                        .HasMaxLength(20);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<int>("Total");

                    b.HasKey("LaborSupplyID");

                    b.ToTable("LaborSupply");
                });

            modelBuilder.Entity("Ship.Core.Entities.LaborSupplyPut", b =>
                {
                    b.Property<int>("LaborSupplyPutID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int>("LaborSupplyID");

                    b.Property<DateTime>("PutDate");

                    b.Property<byte>("PutType");

                    b.Property<string>("Remark")
                        .HasMaxLength(100);

                    b.HasKey("LaborSupplyPutID");

                    b.HasIndex("LaborSupplyID");

                    b.ToTable("LaborSupplyPut");
                });

            modelBuilder.Entity("Ship.Core.Entities.LaborSupplyTake", b =>
                {
                    b.Property<int>("LaborSupplyTakeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<string>("Department")
                        .HasMaxLength(50);

                    b.Property<int>("LaborSupplyID");

                    b.Property<string>("Remark")
                        .HasMaxLength(100);

                    b.Property<DateTime>("TakeDate");

                    b.Property<string>("TakePerson")
                        .HasMaxLength(10);

                    b.Property<byte>("TakeType");

                    b.HasKey("LaborSupplyTakeID");

                    b.HasIndex("LaborSupplyID");

                    b.ToTable("LaborSupplyTake");
                });

            modelBuilder.Entity("Ship.Core.Entities.Notice", b =>
                {
                    b.Property<int>("NoticeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("Deadline");

                    b.Property<DateTime>("NoticeTime");

                    b.Property<byte>("Source");

                    b.Property<int>("SourceID");

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.HasKey("NoticeID");

                    b.ToTable("Notice");
                });

            modelBuilder.Entity("Ship.Core.Entities.Sailor", b =>
                {
                    b.Property<int>("SailorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasMaxLength(10);

                    b.Property<string>("Address")
                        .HasMaxLength(200);

                    b.Property<string>("Bank")
                        .HasMaxLength(50);

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Birthplace")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte>("Blood");

                    b.Property<string>("Chest")
                        .HasMaxLength(10);

                    b.Property<string>("CoatLength")
                        .HasMaxLength(10);

                    b.Property<string>("Collar")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("ComeInDate");

                    b.Property<byte?>("Degree");

                    b.Property<byte?>("EducationDegree");

                    b.Property<string>("Email")
                        .HasMaxLength(20);

                    b.Property<byte?>("EnglishLevel");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("EnrollmentDate");

                    b.Property<byte?>("Ethnic");

                    b.Property<int?>("FileID");

                    b.Property<byte>("Gender");

                    b.Property<string>("GraduateCollege")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("GraduateDate");

                    b.Property<string>("HatSize")
                        .HasMaxLength(10);

                    b.Property<int?>("Height");

                    b.Property<string>("HomeContacter")
                        .HasMaxLength(20);

                    b.Property<string>("HomeTel")
                        .HasMaxLength(20);

                    b.Property<string>("IdentityNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Major")
                        .HasMaxLength(50);

                    b.Property<byte>("Marital");

                    b.Property<string>("MedicalInsuranceNo")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("PensionNo")
                        .HasMaxLength(50);

                    b.Property<byte>("Post");

                    b.Property<string>("ProvidentFundNo")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<int?>("ServiceRecordID");

                    b.Property<string>("ShoeSize")
                        .HasMaxLength(10);

                    b.Property<string>("Sleeve")
                        .HasMaxLength(10);

                    b.Property<string>("SocialInsuranceNo")
                        .HasMaxLength(50);

                    b.Property<byte?>("Source");

                    b.Property<byte>("Status");

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<int?>("TraineeID");

                    b.Property<string>("TrouserLength")
                        .HasMaxLength(10);

                    b.Property<string>("UnemployBenefitNo")
                        .HasMaxLength(50);

                    b.Property<int?>("VesselID");

                    b.Property<string>("VesselName");

                    b.Property<string>("WageCardNo")
                        .HasMaxLength(50);

                    b.Property<string>("Waist")
                        .HasMaxLength(10);

                    b.Property<int?>("Weight");

                    b.Property<DateTime?>("WorkInDate");

                    b.HasKey("SailorID");

                    b.HasIndex("VesselID");

                    b.ToTable("Sailor");
                });

            modelBuilder.Entity("Ship.Core.Entities.ServiceRecord", b =>
                {
                    b.Property<int>("ServiceRecordID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AboardDate");

                    b.Property<string>("AboardPlace")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("AshoreDate");

                    b.Property<string>("AshorePlace")
                        .HasMaxLength(50);

                    b.Property<string>("AshoreReason")
                        .HasMaxLength(50);

                    b.Property<string>("Comment")
                        .HasMaxLength(200);

                    b.Property<bool>("Complete");

                    b.Property<int?>("ContractID");

                    b.Property<byte>("Post");

                    b.Property<string>("Remark")
                        .HasMaxLength(200);

                    b.Property<string>("SailZone")
                        .HasMaxLength(50);

                    b.Property<int>("SailorID");

                    b.Property<string>("SailorName")
                        .HasMaxLength(10);

                    b.Property<int>("ShipownerID");

                    b.Property<string>("ShipownerName")
                        .HasMaxLength(50);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<int>("VesselID");

                    b.Property<string>("VesselName")
                        .HasMaxLength(50);

                    b.HasKey("ServiceRecordID");

                    b.HasIndex("ContractID");

                    b.HasIndex("SailorID");

                    b.HasIndex("ShipownerID");

                    b.HasIndex("VesselID");

                    b.ToTable("ServiceRecord");
                });

            modelBuilder.Entity("Ship.Core.Entities.Shipowner", b =>
                {
                    b.Property<int>("ShipownerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(50);

                    b.Property<string>("Contacter")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(20);

                    b.Property<string>("Fax")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10);

                    b.Property<string>("Representative")
                        .HasMaxLength(10);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<string>("Telephone")
                        .HasMaxLength(20);

                    b.Property<string>("Website")
                        .HasMaxLength(50);

                    b.HasKey("ShipownerID");

                    b.ToTable("Shipowner");
                });

            modelBuilder.Entity("Ship.Core.Entities.SysCompany", b =>
                {
                    b.Property<int>("SysCompanyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contacter")
                        .HasMaxLength(10);

                    b.Property<DateTime>("ExpireTime");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<DateTime>("OpenTime");

                    b.Property<string>("Telephone")
                        .HasMaxLength(20);

                    b.HasKey("SysCompanyId");

                    b.ToTable("SysCompany");
                });

            modelBuilder.Entity("Ship.Core.Entities.Title", b =>
                {
                    b.Property<int>("TitleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Approach")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("BeginDate");

                    b.Property<string>("Category")
                        .HasMaxLength(50);

                    b.Property<string>("Company")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("EndDate");

                    b.Property<DateTime?>("EngageDate");

                    b.Property<string>("Major")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte?>("Post");

                    b.Property<string>("Remark")
                        .HasMaxLength(100);

                    b.Property<int>("SailorID");

                    b.Property<string>("SailorName")
                        .HasMaxLength(10);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<string>("Work")
                        .HasMaxLength(50);

                    b.HasKey("TitleID");

                    b.HasIndex("SailorID");

                    b.ToTable("Title");
                });

            modelBuilder.Entity("Ship.Core.Entities.Trainee", b =>
                {
                    b.Property<int>("TraineeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CertificateNo")
                        .HasMaxLength(50);

                    b.Property<double?>("Expense");

                    b.Property<double?>("ExpenseClaim");

                    b.Property<bool>("Qualified");

                    b.Property<string>("Remark")
                        .HasMaxLength(100);

                    b.Property<int>("SailorID");

                    b.Property<string>("SailorName")
                        .HasMaxLength(10);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<int>("TrainingClassID");

                    b.Property<string>("TrainingClassName")
                        .HasMaxLength(50);

                    b.HasKey("TraineeID");

                    b.HasIndex("SailorID");

                    b.HasIndex("TrainingClassID");

                    b.ToTable("Traine");
                });

            modelBuilder.Entity("Ship.Core.Entities.TrainingClass", b =>
                {
                    b.Property<int>("TrainingClassID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BeginDate");

                    b.Property<int?>("ClassHour");

                    b.Property<string>("Company")
                        .HasMaxLength(50);

                    b.Property<string>("EducationDegree")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("EndDate");

                    b.Property<double?>("Fees");

                    b.Property<string>("Form")
                        .HasMaxLength(20);

                    b.Property<int?>("GraduateNumber");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ParticipantNumber");

                    b.Property<int?>("Period");

                    b.Property<string>("Property")
                        .HasMaxLength(20);

                    b.Property<string>("Remark")
                        .HasMaxLength(100);

                    b.Property<string>("SchoolingLength")
                        .HasMaxLength(20);

                    b.Property<string>("Subject")
                        .HasMaxLength(50);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<string>("Target")
                        .HasMaxLength(20);

                    b.Property<string>("Teacher")
                        .HasMaxLength(20);

                    b.HasKey("TrainingClassID");

                    b.ToTable("TrainingClass");
                });

            modelBuilder.Entity("Ship.Core.Entities.UploadFile", b =>
                {
                    b.Property<int>("UploadFileID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("Path")
                        .HasMaxLength(100);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.HasKey("UploadFileID");

                    b.ToTable("UploadFile");
                });

            modelBuilder.Entity("Ship.Core.Entities.Vessel", b =>
                {
                    b.Property<int>("VesselID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuxiliaryEngine")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("BuildDate");

                    b.Property<string>("BuildPlace")
                        .HasMaxLength(200);

                    b.Property<string>("Catchword")
                        .HasMaxLength(20);

                    b.Property<int?>("DeadWeightTon");

                    b.Property<string>("ElectricGenerator")
                        .HasMaxLength(20);

                    b.Property<string>("Flag")
                        .HasMaxLength(50);

                    b.Property<int?>("GrossTon");

                    b.Property<string>("IMO")
                        .HasMaxLength(20);

                    b.Property<string>("MainEngine")
                        .HasMaxLength(200);

                    b.Property<string>("Manager")
                        .HasMaxLength(20);

                    b.Property<int?>("MinManning");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("NetTon");

                    b.Property<string>("Power")
                        .HasMaxLength(10);

                    b.Property<string>("SailZone")
                        .HasMaxLength(50);

                    b.Property<int>("ShipownerID");

                    b.Property<string>("ShipownerName")
                        .HasMaxLength(50);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<byte?>("Type");

                    b.Property<byte>("VesselManageType");

                    b.HasKey("VesselID");

                    b.HasIndex("ShipownerID");

                    b.ToTable("Vessel");
                });

            modelBuilder.Entity("Ship.Core.Entities.VesselAccount", b =>
                {
                    b.Property<int>("VesselAccountID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Balance");

                    b.Property<int?>("CompanyID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(200);

                    b.Property<double?>("Cost");

                    b.Property<double?>("Debt");

                    b.Property<double?>("Deposit");

                    b.Property<byte>("FeeItem");

                    b.Property<DateTime>("InvoiceDate");

                    b.Property<int?>("InvoiceFileID");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(50);

                    b.Property<double?>("Payment");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<bool>("Payoff");

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<int>("ShipownerID");

                    b.Property<string>("ShipownerName")
                        .HasMaxLength(50);

                    b.Property<byte>("Side");

                    b.Property<int?>("SignFileID");

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<double>("USBalance");

                    b.Property<double?>("USCost");

                    b.Property<double?>("USDebt");

                    b.Property<double?>("USDeposit");

                    b.Property<double?>("USPayment");

                    b.Property<int>("VesselID");

                    b.Property<string>("VesselName")
                        .HasMaxLength(50);

                    b.HasKey("VesselAccountID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("VesselID");

                    b.ToTable("VesselAccount");
                });

            modelBuilder.Entity("Ship.Core.Entities.VesselBalance", b =>
                {
                    b.Property<int>("VesselID");

                    b.Property<double>("Balance");

                    b.Property<int>("ShipownerID");

                    b.Property<double>("USBalance");

                    b.HasKey("VesselID");

                    b.HasIndex("ShipownerID");

                    b.ToTable("VesselBalance");
                });

            modelBuilder.Entity("Ship.Core.Entities.VesselCertificate", b =>
                {
                    b.Property<int>("VesselCertificateID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CertificateTypeID");

                    b.Property<DateTime?>("CheckBeginDate");

                    b.Property<DateTime?>("CheckEndDate");

                    b.Property<DateTime?>("CheckNoticeDate");

                    b.Property<string>("Code")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ExpiryDate");

                    b.Property<DateTime?>("ExpiryNoticeDate");

                    b.Property<int?>("FileID");

                    b.Property<DateTime?>("IssueDate");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<int>("VesselID");

                    b.Property<string>("VesselName")
                        .HasMaxLength(50);

                    b.HasKey("VesselCertificateID");

                    b.HasIndex("VesselID");

                    b.ToTable("VesselCertificate");
                });

            modelBuilder.Entity("Ship.Core.Entities.VesselCostPayment", b =>
                {
                    b.Property<int>("VesselCostPaymentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Debt");

                    b.Property<double?>("Payment");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<int?>("ReceiptFileID");

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<double?>("USDebt");

                    b.Property<double?>("USPayment");

                    b.Property<int>("VesselAccountID");

                    b.HasKey("VesselCostPaymentID");

                    b.HasIndex("VesselAccountID");

                    b.ToTable("VesselCostPayment");
                });

            modelBuilder.Entity("Ship.Core.Entities.Wage", b =>
                {
                    b.Property<int>("WageID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BeginDate");

                    b.Property<int>("ContractID");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("Month");

                    b.Property<int>("MonthlyDays");

                    b.Property<int>("SailorID");

                    b.Property<string>("SailorName")
                        .HasMaxLength(10);

                    b.Property<double?>("ShouldWage");

                    b.Property<double?>("StandardWage");

                    b.Property<int>("SysCompanyId");

                    b.Property<string>("SysUserId")
                        .HasMaxLength(50);

                    b.Property<int>("WorkDays");

                    b.Property<int>("Year");

                    b.HasKey("WageID");

                    b.HasIndex("ContractID");

                    b.HasIndex("SailorID");

                    b.ToTable("Wage");
                });

            modelBuilder.Entity("Ship.Core.Entities.Certificate", b =>
                {
                    b.HasOne("Ship.Core.Entities.Sailor", "Sailor")
                        .WithMany("Certificates")
                        .HasForeignKey("SailorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.Contract", b =>
                {
                    b.HasOne("Ship.Core.Entities.Sailor", "Sailor")
                        .WithMany("Contracts")
                        .HasForeignKey("SailorID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ship.Core.Entities.Shipowner", "Shipowner")
                        .WithMany("Contracts")
                        .HasForeignKey("ShipownerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ship.Core.Entities.Vessel", "Vessel")
                        .WithMany("Contracts")
                        .HasForeignKey("VesselID");
                });

            modelBuilder.Entity("Ship.Core.Entities.Exam", b =>
                {
                    b.HasOne("Ship.Core.Entities.Sailor", "Sailor")
                        .WithMany("Exams")
                        .HasForeignKey("SailorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.ExamItem", b =>
                {
                    b.HasOne("Ship.Core.Entities.Exam", "Exam")
                        .WithMany("ExamItems")
                        .HasForeignKey("ExamID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.Experience", b =>
                {
                    b.HasOne("Ship.Core.Entities.Sailor", "Sailor")
                        .WithMany("Experiences")
                        .HasForeignKey("SailorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.Family", b =>
                {
                    b.HasOne("Ship.Core.Entities.Sailor", "Sailor")
                        .WithMany("Families")
                        .HasForeignKey("SailorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.Interview", b =>
                {
                    b.HasOne("Ship.Core.Entities.Sailor", "Sailor")
                        .WithMany("Interviews")
                        .HasForeignKey("SailorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.LaborSupplyPut", b =>
                {
                    b.HasOne("Ship.Core.Entities.LaborSupply", "LaborSupply")
                        .WithMany("LaborSupplyPuts")
                        .HasForeignKey("LaborSupplyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.LaborSupplyTake", b =>
                {
                    b.HasOne("Ship.Core.Entities.LaborSupply", "LaborSupply")
                        .WithMany("LaborSupplyTakes")
                        .HasForeignKey("LaborSupplyID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.Sailor", b =>
                {
                    b.HasOne("Ship.Core.Entities.Vessel", "Vessel")
                        .WithMany("Sailors")
                        .HasForeignKey("VesselID");
                });

            modelBuilder.Entity("Ship.Core.Entities.ServiceRecord", b =>
                {
                    b.HasOne("Ship.Core.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractID");

                    b.HasOne("Ship.Core.Entities.Sailor", "Sailor")
                        .WithMany("ServiceRecords")
                        .HasForeignKey("SailorID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ship.Core.Entities.Shipowner", "Shipowner")
                        .WithMany("ServiceRecords")
                        .HasForeignKey("ShipownerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ship.Core.Entities.Vessel", "Vessel")
                        .WithMany("ServiceRecords")
                        .HasForeignKey("VesselID");
                });

            modelBuilder.Entity("Ship.Core.Entities.Title", b =>
                {
                    b.HasOne("Ship.Core.Entities.Sailor", "Sailor")
                        .WithMany("Titles")
                        .HasForeignKey("SailorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.Trainee", b =>
                {
                    b.HasOne("Ship.Core.Entities.Sailor", "Sailor")
                        .WithMany("Trainees")
                        .HasForeignKey("SailorID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ship.Core.Entities.TrainingClass", "TrainingClass")
                        .WithMany("Trainees")
                        .HasForeignKey("TrainingClassID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.Vessel", b =>
                {
                    b.HasOne("Ship.Core.Entities.Shipowner", "Shipowner")
                        .WithMany("Vessels")
                        .HasForeignKey("ShipownerID");
                });

            modelBuilder.Entity("Ship.Core.Entities.VesselAccount", b =>
                {
                    b.HasOne("Ship.Core.Entities.Company", "Company")
                        .WithMany("VesselCosts")
                        .HasForeignKey("CompanyID");

                    b.HasOne("Ship.Core.Entities.Vessel", "Vessel")
                        .WithMany("VesselAccounts")
                        .HasForeignKey("VesselID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.VesselBalance", b =>
                {
                    b.HasOne("Ship.Core.Entities.Shipowner", "Shipowner")
                        .WithMany()
                        .HasForeignKey("ShipownerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ship.Core.Entities.Vessel", "Vessel")
                        .WithOne("VesselBalance")
                        .HasForeignKey("Ship.Core.Entities.VesselBalance", "VesselID");
                });

            modelBuilder.Entity("Ship.Core.Entities.VesselCertificate", b =>
                {
                    b.HasOne("Ship.Core.Entities.Vessel", "Vessel")
                        .WithMany("VesselCertificates")
                        .HasForeignKey("VesselID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.VesselCostPayment", b =>
                {
                    b.HasOne("Ship.Core.Entities.VesselAccount", "VesselAccount")
                        .WithMany("VesselCostPayments")
                        .HasForeignKey("VesselAccountID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ship.Core.Entities.Wage", b =>
                {
                    b.HasOne("Ship.Core.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ship.Core.Entities.Sailor", "Sailor")
                        .WithMany("Wages")
                        .HasForeignKey("SailorID");
                });
#pragma warning restore 612, 618
        }
    }
}
